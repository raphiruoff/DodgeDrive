syntax = "proto3";

package de.ruoff.consistency.service.session;

service SessionService {
    rpc CreateSession (CreateSessionRequest) returns (CreateSessionResponse);
    rpc JoinSession (JoinSessionRequest) returns (JoinSessionResponse);
    rpc GetSession (GetSessionRequest) returns (GetSessionResponse);
    rpc LeaveSession (LeaveSessionRequest) returns (LeaveSessionResponse);
    rpc GetOpenSessionForPlayer (PlayerRequest) returns (GetSessionResponse);
    rpc InvitePlayer (InvitePlayerRequest) returns (InvitePlayerResponse);
    rpc GetInvitations (PlayerRequest) returns (GetInvitationsResponse);
    rpc AcceptInvitation (AcceptInvitationRequest) returns (AcceptInvitationResponse);
    rpc TriggerGameStart(StartGameRequest) returns (StartGameResponse);
    rpc StreamInvitations (PlayerRequest) returns (stream Invitation);
    rpc SetReady (SetReadyRequest) returns (SetReadyResponse);
    rpc UnsetReady (SetReadyRequest) returns (SetReadyResponse);

}

message CreateSessionRequest {
    string playerA = 1;
}

message CreateSessionResponse {
    string sessionId = 1;
}

message JoinSessionRequest {
    string sessionId = 1;
    string playerB = 2;
}

message JoinSessionResponse {
    bool success = 1;
}

message GetSessionRequest {
    string sessionId = 1;
}

message GetSessionResponse {
    string sessionId = 1;
    string playerA = 2;
    string playerB = 3;
    string status = 4;
    bool playerAReady = 5;
    bool playerBReady = 6;
}


message LeaveSessionRequest {
    string sessionId = 1;
    string username = 2;
}

message LeaveSessionResponse {
    bool success = 1;
}

message PlayerRequest {
    string player = 1;
}

message InvitePlayerRequest {
    string requester = 1;
    string receiver = 2;
}

message InvitePlayerResponse {
    bool success = 1;
}

message Invitation {
    string sessionId = 1;
    string requester = 2;
}

message GetInvitationsResponse {
    repeated Invitation invitations = 1;
}

message AcceptInvitationRequest {
    string sessionId = 1;
    string username = 2;
}

message AcceptInvitationResponse {
    bool success = 1;
}

message StartGameRequest {
    string sessionId = 1;
    string username = 2;
}


message StartGameResponse {
    bool success = 1;
    int64 startAt = 2;
    string gameId = 3;
}

message SetReadyRequest {
    string sessionId = 1;
    string username = 2;
    bool ready = 3;
}


message SetReadyResponse {
    bool success = 1;
}

