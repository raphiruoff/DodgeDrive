version: '3.8'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    restart: always


  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: always

  springboot-app:
    build: .
    container_name: springboot-app
    volumes:
      - ./export:/app/export
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/profiledatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123
    ports:
      - "9090:9090"
    depends_on:
      - postgres
      - kafka

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  session-service:
    build: ./services/session-service
    ports:
      - "9101:9101"
    depends_on:
      - redis
      - kafka
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  game-service:
    build: ./services/game-service
    ports:
      - "9093:9093"
    depends_on:
      - redis
      - kafka
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  leaderboard-service:
    build: ./services/leaderboard-service
    container_name: leaderboard-service
    ports:
      - "9094:9094"
    depends_on:
      - mongodb
      - kafka
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/leaderboard
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  profile-service:
    build: ./services/profile-service
    container_name: profile-service
    ports:
      - "9095:9095"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/profiledatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123

  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    ports:
      - "9096:9096"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/auth
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123


volumes:
  postgres_data: {}
  mongo_data: { }
  redis_data: { }


